diff --git a/src/Controller/AllTableList.php b/src/Controller/AllTableList.php
index 45d6ec2..85461e3 100644
--- a/src/Controller/AllTableList.php
+++ b/src/Controller/AllTableList.php
@@ -62,41 +62,43 @@ class AllTableList extends ControllerBase {
       $configData = $this->config->getRawData();
       if (!empty($configData)) {
         $all_database_connections = Database::getAllConnectionInfo();
-        foreach ($configData as $rowData) {
-          $delete_url = Url::fromRoute('view_custom_table.removecustomtable', ['table_name' => $rowData['table_name']]);
-          $edit_url = Url::fromRoute('view_custom_table.editcustomtable', ['table_name' => $rowData['table_name']]);
-          $edit_relations_url = Url::fromRoute('view_custom_table.edittablerelations', ['table_name' => $rowData['table_name']]);
-          $views_url = Url::fromRoute('view_custom_table.customtable_views', ['table_name' => $rowData['table_name']]);
+        foreach ($configData as $table_name => $rowData) {
+          if ($table_name != "_core") {
+            $delete_url = Url::fromRoute('view_custom_table.removecustomtable', ['table_name' => $rowData['table_name']]);
+            $edit_url = Url::fromRoute('view_custom_table.editcustomtable', ['table_name' => $rowData['table_name']]);
+            $edit_relations_url = Url::fromRoute('view_custom_table.edittablerelations', ['table_name' => $rowData['table_name']]);
+            $views_url = Url::fromRoute('view_custom_table.customtable_views', ['table_name' => $rowData['table_name']]);
 
-          $links = [
-            [
-              '#type' => 'dropbutton',
-              '#links' => [
-                [
-                  'title' => $this->t('Edit'),
-                  'url' => $edit_url,
-                ],
-                [
-                  'title' => $this->t('Edit Relations'),
-                  'url' => $edit_relations_url,
-                ],
-                [
-                  'title' => $this->t('Views'),
-                  'url' => $views_url,
-                ],
-                [
-                  'title' => $this->t('Delete'),
-                  'url' => $delete_url,
+            $links = [
+              [
+                '#type' => 'dropbutton',
+                '#links' => [
+                  [
+                    'title' => $this->t('Edit'),
+                    'url' => $edit_url,
+                  ],
+                  [
+                    'title' => $this->t('Edit Relations'),
+                    'url' => $edit_relations_url,
+                  ],
+                  [
+                    'title' => $this->t('Views'),
+                    'url' => $views_url,
+                  ],
+                  [
+                    'title' => $this->t('Delete'),
+                    'url' => $delete_url,
+                  ],
                 ],
               ],
-            ],
-          ];
-          $rows[] = [
-            'name' => $rowData['table_name'],
-            'database' => $all_database_connections[$rowData['table_database']]['default']['database'],
-            'description' => $rowData['description'],
-            'operations' => $this->renderer->render($links),
-          ];
+            ];
+            $rows[] = [
+              'name' => $rowData['table_name'],
+              'database' => $all_database_connections[$rowData['table_database']]['default']['database'],
+              'description' => $rowData['description'],
+              'operations' => $this->renderer->render($links),
+            ];
+          }
         }
         $headers = [
           $this->t('Table Name'),
diff --git a/src/Controller/OwnTableList.php b/src/Controller/OwnTableList.php
index 16af1e7..2fa85e3 100644
--- a/src/Controller/OwnTableList.php
+++ b/src/Controller/OwnTableList.php
@@ -74,42 +74,44 @@ class OwnTableList extends ControllerBase {
       $configData = $this->config->getRawData();
       if (!empty($configData)) {
         $all_database_connections = Database::getAllConnectionInfo();
-        foreach ($configData as $rowData) {
-          if ($this->account->id() == $rowData['created_by']) {
-            $delete_url = Url::fromRoute('view_custom_table.removecustomtable', ['table_name' => $rowData['table_name']]);
-            $edit_url = Url::fromRoute('view_custom_table.editcustomtable', ['table_name' => $rowData['table_name']]);
-            $edit_relations_url = Url::fromRoute('view_custom_table.edittablerelations', ['table_name' => $rowData['table_name']]);
-            $views_url = Url::fromRoute('view_custom_table.customtable_views', ['table_name' => $rowData['table_name']]);
+        foreach ($configData as $table_name => $rowData) {
+          if ($table_name != "_core") {
+            if ($this->account->id() == $rowData['created_by']) {
+              $delete_url = Url::fromRoute('view_custom_table.removecustomtable', ['table_name' => $rowData['table_name']]);
+              $edit_url = Url::fromRoute('view_custom_table.editcustomtable', ['table_name' => $rowData['table_name']]);
+              $edit_relations_url = Url::fromRoute('view_custom_table.edittablerelations', ['table_name' => $rowData['table_name']]);
+              $views_url = Url::fromRoute('view_custom_table.customtable_views', ['table_name' => $rowData['table_name']]);
 
-            $links = [
-              [
-                '#type' => 'dropbutton',
-                '#links' => [
-                  [
-                    'title' => $this->t('Edit'),
-                    'url' => $edit_url,
-                  ],
-                  [
-                    'title' => $this->t('Edit Relations'),
-                    'url' => $edit_relations_url,
-                  ],
-                  [
-                    'title' => $this->t('Views'),
-                    'url' => $views_url,
-                  ],
-                  [
-                    'title' => $this->t('Delete'),
-                    'url' => $delete_url,
+              $links = [
+                [
+                  '#type' => 'dropbutton',
+                  '#links' => [
+                    [
+                      'title' => $this->t('Edit'),
+                      'url' => $edit_url,
+                    ],
+                    [
+                      'title' => $this->t('Edit Relations'),
+                      'url' => $edit_relations_url,
+                    ],
+                    [
+                      'title' => $this->t('Views'),
+                      'url' => $views_url,
+                    ],
+                    [
+                      'title' => $this->t('Delete'),
+                      'url' => $delete_url,
+                    ],
                   ],
                 ],
-              ],
-            ];
-            $rows[] = [
-              'name' => $rowData['table_name'],
-              'database' => $all_database_connections[$rowData['table_database']]['default']['database'],
-              'description' => $rowData['description'],
-              'operations' => $this->renderer->render($links),
-            ];
+              ];
+              $rows[] = [
+                'name' => $rowData['table_name'],
+                'database' => $all_database_connections[$rowData['table_database']]['default']['database'],
+                'description' => $rowData['description'],
+                'operations' => $this->renderer->render($links),
+              ];
+            }
           }
         }
         $headers = [
diff --git a/view_custom_table.module b/view_custom_table.module
index 376e913..916e376 100644
--- a/view_custom_table.module
+++ b/view_custom_table.module
@@ -66,170 +66,172 @@ function view_custom_table_views_data() {
 
   if (!empty($all_custom_tables)) {
     foreach ($all_custom_tables as $table_name => $custom_table) {
-      $table_relations = unserialize($custom_table['column_relations'], ['allowed_classes' => FALSE]);
-      $table_display_name = ucfirst($table_name);
-      $table_display_name = str_replace('_', ' ', $table_display_name);
+      if ($table_name != "_core") {
+        $table_relations = unserialize($custom_table['column_relations'], ['allowed_classes' => FALSE]);
+        $table_display_name = ucfirst($table_name);
+        $table_display_name = str_replace('_', ' ', $table_display_name);
 
-      $data[$table_name]['table']['group'] = t('Custom Table Views');
+        $data[$table_name]['table']['group'] = t('Custom Table Views');
 
-      $table = view_custom_table_load_table_structure($table_name, $custom_table['table_database']);
-      $table_listed = [];
+        $table = view_custom_table_load_table_structure($table_name, $custom_table['table_database']);
+        $table_listed = [];
 
-      foreach ((array) $table as $column) {
-        $column_display_name = ucfirst($column->Field);
-        $column_display_name = str_replace('_', ' ', $column_display_name);
+        foreach ((array) $table as $column) {
+          $column_display_name = ucfirst($column->Field);
+          $column_display_name = str_replace('_', ' ', $column_display_name);
 
-        if (strpos($column->Type, '(')) {
-          $column_type_values = explode('(', $column->Type);
-          $column_type = $column_type_values[0];
-        }
-        else {
-          $column_type = $column->Type;
-        }
+          if (strpos($column->Type, '(')) {
+            $column_type_values = explode('(', $column->Type);
+            $column_type = $column_type_values[0];
+          }
+          else {
+            $column_type = $column->Type;
+          }
 
-        if (!(\array_key_exists($table_name, $table_listed))) {
-          $table_listed[$table_name] = TRUE;
+          if (!(\array_key_exists($table_name, $table_listed))) {
+            $table_listed[$table_name] = TRUE;
 
-          $data[$table_name]['table']['base'] = [
-            'field' => $column->Field,
-            'title' => t('@table data', [
-              '@table' => $table_display_name,
-            ]),
-            'help' => t('Data of @table.', [
-              '@table' => $table_display_name,
-            ]),
-            'database' => $custom_table['table_database'],
-            'weight' => 10,
-          ];
-        }
+            $data[$table_name]['table']['base'] = [
+              'field' => $column->Field,
+              'title' => t('@table data', [
+                '@table' => $table_display_name,
+              ]),
+              'help' => t('Data of @table.', [
+                '@table' => $table_display_name,
+              ]),
+              'database' => $custom_table['table_database'],
+              'weight' => 10,
+            ];
+          }
 
-        if (in_array($column_type, $int_types)) {
-          $data[$table_name][$column->Field] = [
-            'title' => t('@column_name', [
-              '@column_name' => $column_display_name,
-            ]),
-            'help' => t('@column_name data form @table.', [
-              '@column_name' => $column_display_name,
-              '@table' => $table_display_name,
-            ]),
-            'field' => [
-              'id' => 'numeric',
-            ],
-            'sort' => [
-              'id' => 'standard',
-            ],
-            'filter' => [
-              'id' => 'numeric',
-            ],
-            'argument' => [
-              'id' => 'numeric',
-            ],
-          ];
-        }
+          if (in_array($column_type, $int_types)) {
+            $data[$table_name][$column->Field] = [
+              'title' => t('@column_name', [
+                '@column_name' => $column_display_name,
+              ]),
+              'help' => t('@column_name data form @table.', [
+                '@column_name' => $column_display_name,
+                '@table' => $table_display_name,
+              ]),
+              'field' => [
+                'id' => 'numeric',
+              ],
+              'sort' => [
+                'id' => 'standard',
+              ],
+              'filter' => [
+                'id' => 'numeric',
+              ],
+              'argument' => [
+                'id' => 'numeric',
+              ],
+            ];
+          }
 
-        if (in_array($column_type, $text_types)) {
-          $data[$table_name][$column->Field] = [
-            'title' => t('@column_name', [
-              '@column_name' => $column_display_name,
-            ]),
-            'help' => t('@column_name data form @table.', [
-              '@column_name' => $column_display_name,
-              '@table' => $table_display_name,
-            ]),
-            'field' => [
-              'id' => 'standard',
-            ],
-            'sort' => [
-              'id' => 'standard',
-            ],
-            'filter' => [
-              'id' => 'string',
-            ],
-            'argument' => [
-              'id' => 'string',
-            ],
-          ];
-        }
-        if (in_array($column_type, $time_type)) {
-          $data[$table_name][$column->Field] = [
-            'title' => t('@column_name', [
-              '@column_name' => $column_display_name,
-            ]),
-            'help' => t('@column_name data form @table.', [
-              '@column_name' => $column_display_name,
-              '@table' => $table_display_name,
-            ]),
-            'field' => [
-              'id' => 'mysql_date',
-            ],
-            'filter' => [
-              'id' => 'mysql_date',
-            ],
-          ];
-        }
-        if (!empty($table_relations)) {
-          if (array_key_exists($column->Field, $table_relations)) {
-            $all_entities = \Drupal::entityTypeManager()->getDefinitions();
-            if (isset($all_entities[$table_relations[$column->Field]])) {
-              $entity_info = \Drupal::entityTypeManager()->getDefinition($table_relations[$column->Field]);
-              $entity_keys = $entity_info->getKeys();
-              $base = $entity_info->getDataTable();
-              if ($table_relations[$column->Field] == 'file') {
-                $base = 'file_managed';
-              }
-              $data[$table_name][$column->Field]['relationship'] = [
-                'base' => $base,
+          if (in_array($column_type, $text_types)) {
+            $data[$table_name][$column->Field] = [
+              'title' => t('@column_name', [
+                '@column_name' => $column_display_name,
+              ]),
+              'help' => t('@column_name data form @table.', [
+                '@column_name' => $column_display_name,
+                '@table' => $table_display_name,
+              ]),
+              'field' => [
                 'id' => 'standard',
-                'base field' => $entity_keys['id'],
-                'label' => t('@column_name', [
-                  '@column_name' => $column_display_name,
-                ]),
-                'title' => t('@column_name', [
-                  '@column_name' => $column_display_name,
-                ]),
-                'help' => t('@entity - @column_name relationship', [
-                  '@column_name' => $column_display_name,
-                  '@entity' => $entity_info->getBaseTable(),
-                ]),
-              ];
-              $data[$entity_info->getBaseTable()][$table_name] = [
-                'title' => t('Reverse reference to @custom_table', ['@custom_table' => $custom_table['description'] ?? $custom_table['table_name']]),
-                'help' => t('Reference each custom table entry back from table @custom_table', ['@custom_table' => $custom_table['table_name']]),
-                'relationship' => [
-                  'id' => 'entity_reverse',
-                  'field_name' => $table_name,
-                  'field table' => $table_name,
-                  'field field' => $column->Field,
-                  'base' => $table_name,
-                  'base field' => $column->Field,
-                  'label' => $custom_table['description'] ?? $custom_table['table_name'],
-                ],
-              ];
-            }
-            else {
-              $related_table_info = $all_custom_tables[$table_relations[$column->Field]];
-              $related_table = view_custom_table_load_table_structure($related_table_info['table_name'], $related_table_info['table_database']);
-              foreach ((array) $related_table as $related_table_column) {
-                if ($related_table_column->Key == 'PRI') {
-                  $related_table_pri_key = $related_table_column->Field;
+              ],
+              'sort' => [
+                'id' => 'standard',
+              ],
+              'filter' => [
+                'id' => 'string',
+              ],
+              'argument' => [
+                'id' => 'string',
+              ],
+            ];
+          }
+          if (in_array($column_type, $time_type)) {
+            $data[$table_name][$column->Field] = [
+              'title' => t('@column_name', [
+                '@column_name' => $column_display_name,
+              ]),
+              'help' => t('@column_name data form @table.', [
+                '@column_name' => $column_display_name,
+                '@table' => $table_display_name,
+              ]),
+              'field' => [
+                'id' => 'mysql_date',
+              ],
+              'filter' => [
+                'id' => 'mysql_date',
+              ],
+            ];
+          }
+          if (!empty($table_relations)) {
+            if (array_key_exists($column->Field, $table_relations)) {
+              $all_entities = \Drupal::entityTypeManager()->getDefinitions();
+              if (isset($all_entities[$table_relations[$column->Field]])) {
+                $entity_info = \Drupal::entityTypeManager()->getDefinition($table_relations[$column->Field]);
+                $entity_keys = $entity_info->getKeys();
+                $base = $entity_info->getDataTable();
+                if ($table_relations[$column->Field] == 'file') {
+                  $base = 'file_managed';
                 }
+                $data[$table_name][$column->Field]['relationship'] = [
+                  'base' => $base,
+                  'id' => 'standard',
+                  'base field' => $entity_keys['id'],
+                  'label' => t('@column_name', [
+                    '@column_name' => $column_display_name,
+                  ]),
+                  'title' => t('@column_name', [
+                    '@column_name' => $column_display_name,
+                  ]),
+                  'help' => t('@entity - @column_name relationship', [
+                    '@column_name' => $column_display_name,
+                    '@entity' => $entity_info->getBaseTable(),
+                  ]),
+                ];
+                $data[$entity_info->getBaseTable()][$table_name] = [
+                  'title' => t('Reverse reference to @custom_table', ['@custom_table' => $custom_table['description'] ?? $custom_table['table_name']]),
+                  'help' => t('Reference each custom table entry back from table @custom_table', ['@custom_table' => $custom_table['table_name']]),
+                  'relationship' => [
+                    'id' => 'entity_reverse',
+                    'field_name' => $table_name,
+                    'field table' => $table_name,
+                    'field field' => $column->Field,
+                    'base' => $table_name,
+                    'base field' => $column->Field,
+                    'label' => $custom_table['description'] ?? $custom_table['table_name'],
+                  ],
+                ];
+              }
+              else {
+                $related_table_info = $all_custom_tables[$table_relations[$column->Field]];
+                $related_table = view_custom_table_load_table_structure($related_table_info['table_name'], $related_table_info['table_database']);
+                foreach ((array) $related_table as $related_table_column) {
+                  if ($related_table_column->Key == 'PRI') {
+                    $related_table_pri_key = $related_table_column->Field;
+                  }
+                }
+                $data[$table_name][$column->Field]['relationship'] = [
+                  'base' => $table_relations[$column->Field],
+                  'database' => $related_table_info['table_database'],
+                  'id' => 'standard',
+                  'base field' => $related_table_pri_key,
+                  'label' => t('@column_name', [
+                    '@column_name' => $column_display_name,
+                  ]),
+                  'title' => t('@column_name', [
+                    '@column_name' => $column_display_name,
+                  ]),
+                  'help' => t('@entity - @column_name relationship', [
+                    '@column_name' => $column_display_name,
+                    '@entity' => $table_relations[$column->Field],
+                  ]),
+                ];
               }
-              $data[$table_name][$column->Field]['relationship'] = [
-                'base' => $table_relations[$column->Field],
-                'database' => $related_table_info['table_database'],
-                'id' => 'standard',
-                'base field' => $related_table_pri_key,
-                'label' => t('@column_name', [
-                  '@column_name' => $column_display_name,
-                ]),
-                'title' => t('@column_name', [
-                  '@column_name' => $column_display_name,
-                ]),
-                'help' => t('@entity - @column_name relationship', [
-                  '@column_name' => $column_display_name,
-                  '@entity' => $table_relations[$column->Field],
-                ]),
-              ];
             }
           }
         }
